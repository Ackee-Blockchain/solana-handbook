{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Why Solana Handbook?","text":"<p>Solana was introduced by Anatoly Yakovenko in 2017 when the Solana Whitepaper [10] was published. However, the whitepaper is no longer up-to-date and we haven\u2019t found documentation that would meet our needs - to provide study material for the School of Solana.</p> <p>That is why this handbook was created. Its purpose is to introduce the reader to the Solana blockchain. It should serve as an entry point for new Solana developers or blockchain enthusiasts wishing to learn about Solana.</p>"},{"location":"#authors","title":"Authors","text":"<p>This handbook was created with love by Ackee Blockchain, its authors are Andrej Luka\u010dovi\u010d, Andrea Nov\u00e1kov\u00e1, Tibor Tribus, Vladim\u00edr Marcin and Ond\u0159ej \u0158eh\u00e1\u010dek.</p> <p>It is based on a master thesis of Luk\u00e1\u0161 Koz\u00e1k under the supervision of Josef Gattermayer, Ph.D., assistant professor at the Faculty of Information Technology, Czech Technical University in Prague and CEO of Ackee Blockchain. Ackee Blockchain is a blockchain security company founded in 2021, specializing in audits and other security assessments. Its team of experts performs Ethereum and Solana audits and develops open-source security frameworks Wake and Trident. By running free certification courses: the School of Solana and the School of Solidity, Ackee Blockchain contributes to a stronger blockchain ecosystem by sharing knowledge.</p>"},{"location":"handbook/appendixA/","title":"Appendix A - Ecosystem","text":""},{"location":"handbook/appendixB/","title":"Appendix B - NFTs","text":""},{"location":"handbook/appendixC/","title":"Appendix C - Gaming","text":""},{"location":"handbook/chapter1/block/","title":"Block","text":"<p>Block is a data structure that contains a header comprising three items \u2013 the hash of the previous block\u2019s header, metadata and a Merkle root [5]. Metadata depends on the protocol. The Merkle root is a root of the well-known Merkle tree, which can be used to verify later that transactions in a block have not been tampered with. After the header comes the core part of the block, the transaction.</p>"},{"location":"handbook/chapter1/blockchain/","title":"Blockchain","text":"<p>A blockchain can be thought of as a series of blocks or an append-only data structure that resembles an ordered back-linked linked list, which uses hashes as pointers to previous blocks (Figure 1.1). This structure consists of blocks that form a chain, hence the term blockchain. It can be easily concluded that it is a very simple data structure.</p> <p></p>"},{"location":"handbook/chapter1/coin/","title":"Coin","text":"<p>Coins motivate participation in the network. They are usually paid with every new block to miners or validators for their help in securing the network. Without the proper incentives, any decentralized blockchain network falls apart.</p>"},{"location":"handbook/chapter1/consensus/","title":"Consensus","text":"<p>To agree on a certain state of a blockchain, network nodes need to reach a consensus. We assume there are malicious nodes in the network. Therefore, the system must be able to withstand not only simple node failures but also attacks to a certain extent. BFT (Byzantine Fault Tolerant) is thus a desired property of such a distributed system. Currently, only three viable consensus families can be used in practice. The first is the classic PBFT-like (Practical BFT) algorithm family [6]. The second is a so-called Nakamoto consensus, which couples a Sybil protection mechanism of Proof-of-Work with the longest-chain rule, a novel consensus invented by Satoshi Nakamoto for Bitcoin in 2008 [2]. The third and newest family of consensus protocols known today is called Snow. Yet it is better known by its implementation name \u2013 Avalanche Consensus [7], introduced in 2018 and used for the Avalanche cryptocurrency.</p>"},{"location":"handbook/chapter1/nodes/","title":"Nodes","text":"<p>Node is a term from graph theory or distributed systems; it is a single participant in a network. The nodes communicate with each other according to the protocol and in a P2P manner forming the whole blockchain network. There might be more types of nodes that are not equal, e.g., validator nodes securing the network or pure RPC (Remote Procedure Call) nodes used only to query the network and post new transactions. Their functions may overlap.</p>"},{"location":"handbook/chapter1/protocol/","title":"Protocol","text":"<p>Protocol is a common set of rules network nodes must follow. It defines things like communication between P2P (Peer-to-Peer) nodes, transaction format for everyone intending to use the network, any special features, and everything else for the network to operate correctly and for the users to know how to transact over the network. An essential part of a good protocol for a decentralized blockchain network is the proper incentive setup; this creates the need for its native coin.</p>"},{"location":"handbook/chapter1/security/","title":"Security","text":"<p>Consensus and Sybil resistance mechanism are often confused as the same thing, which is not true and is worth pointing out. One works in conjunction with the other. Let\u2019s look at how this works in both PoW-based and PoS-based networks. Consider what makes Bitcoin, a PoW-based network, theoretically secure \u2013 it is the fact that only the longest chain is respected, also commonly known as the longest chain rule. This is why the consensus is called, as mentioned before, the Nakamoto consensus. For a PoS-based network, the Sybil resistance mechanism is usually associated with a variant of a PBFT-like algorithm or the novel Avalanche consensus.</p>"},{"location":"handbook/chapter1/smart-contract/","title":"Smart Contract","text":"<p>A smart contract is a piece of code deployed on a blockchain with a cryptographically signed transaction. Users can then interact with it by sending transactions that invoke a specific function defined in the smart contract and the business logic is executed as stated in the deployed code [9]. Data relevant to the smart contract state are also stored on the blockchain. Hence we can look at smart contracts as programs on a decentralized computer that access files in its file system and modify them according to the predefined rules. If such a contract is made immutable, we can trust that the smart contract will not do anything else than what it is supposed to do. It is worth noting that apart from storing the blockchain itself, each node creates a state as a result of transaction execution. The final state is the result of all processed transactions and can always be deterministically recreated from the blockchain history. Code is compiled for a predefined ISA (Instruction Set Architecture) and executed in a VM (Virtual Machine) which understands it. The mentioned VM is a special runtime environment similar to well-known VMs such as JVM (Java Virtual Machine) or CLR (Common Language Runtime) from Microsoft\u2019s .NET ecosystem. The most commonly known VM for smart contracts, which is used by Ethereum [3], is EVM (Ethereum Virtual Machine); it includes its very own instruction set specialized for the needs of smart contracts. Only transactions involving smart contract execution need to be processed by the VM. The standard execution path is to prepare the relevant smart contract data and smart contract byte code, launch the VM with said data and code, and observe possible failures. If the execution succeeds, the changes to the smart contract data made in the VM are taken, and the state outside the VM is changed; otherwise, the changes are discarded and the next transaction continues.</p>"},{"location":"handbook/chapter1/sybil-resistance/","title":"Sybil Resistance","text":"<p>To prevent a single entity from taking over the network, there must be a mechanism put in place so that no one can just spawn more nodes that can mine or vote (depending on the network) and thus subvert the network reputation system. These dishonest nodes would be able to out-vote honest nodes and start censoring transactions, approving invalid transactions, or changing the entire protocol. Currently, the two most common Sybil resistance mechanisms are PoW (Proof-of-Work) and PoS (Proof-of-Stake). The former employs a model where miners in the network are given a chance to mine a block that is proportional to their hashing power in the network and is used in Bitcoin [8]. The latter is a new type of model for voting-based networks, where a validator is given the power of their vote proportionally to staked coins.</p>"},{"location":"handbook/chapter1/transaction/","title":"Transaction","text":"<p>Transaction is a protocol-defined message that is stored as a part of a block, which is then stored as a part of a blockchain. The content usually consists of some kind of value transfer or on-chain program execution. Transactions are cryptographically signed by their authors, proving their authenticity. In the case of a value transfer, ownership of the funds or tokens often represents some value in the real world.</p>"},{"location":"handbook/chapter2/comparison-to-ethereum/","title":"Comparison to Ethereum","text":""},{"location":"handbook/chapter2/rust-development/","title":"Rust Development","text":""},{"location":"handbook/chapter3/archivers/","title":"Archivers \u2013\u2060 Distributed Ledger Storage","text":""},{"location":"handbook/chapter3/cloudbreak/","title":"Cloudbreak \u2013\u2060 Horizontally-scalable Database","text":""},{"location":"handbook/chapter3/gulf-stream/","title":"Gulf Stream \u2013\u2060 Transaction Forwarding Protocol","text":""},{"location":"handbook/chapter3/pipelining/","title":"Pipelining \u2013 Transaction Processing Optimizations","text":""},{"location":"handbook/chapter3/proof-of-history/","title":"Proof-of-History (PoH) \u2013\u2060 Virtual Clocks","text":""},{"location":"handbook/chapter3/sealevel/","title":"Sealevel \u2013\u2060 Parallel Smart Contract Runtime","text":""},{"location":"handbook/chapter3/tower-bft/","title":"Tower BFT (TBFT) \u2013\u2060 PoH-based PBFT","text":""},{"location":"handbook/chapter3/turbine/","title":"Turbine \u2013\u2060 Block Propagation Protocol","text":""},{"location":"handbook/chapter5/account-compression-program/","title":"Account Compression Program","text":""},{"location":"handbook/chapter5/associated-token-acc-program/","title":"Associated Token Account Program","text":""},{"location":"handbook/chapter5/token-2022/","title":"Token 2022 Program","text":""},{"location":"handbook/chapter5/token-program/","title":"Token Program","text":""},{"location":"handbook/introduction/","title":"Solana Handbook","text":"<p>The handbook is structured as follows:</p> <ul> <li>Beginning with Chapter 1, Blockchain Terminology, it clarifies fundamental concepts.</li> <li>Chapter 2, Solana Introduction, provides initial insights into Solana.</li> <li>Chapter 3, Solana Core Concepts, delves deeply into the platform's foundational ideas.</li> <li>Chapter 4, the Programming Model, talks about its operational framework.</li> <li>Continuing, Chapter 5, Solana Program Library discusses available resources provided by the Program Library.</li> </ul> <p>Appendices cover various domains:</p> <ul> <li>Appendix A - Ecosystem, introduces you into the Solana Ecosystem.</li> <li>Appendix B - NFT, provides technical insights into NFTs.</li> <li>Appendix C - Gaming, details about upcoming Web3 and Games.</li> </ul> <p>This comprehensive handbook functions as an ideal primer for those embarking on a journey to understand Solana. We wholeheartedly welcome any input, be it identifying errors or suggesting expansions, to enhance this resource.</p>"},{"location":"revisions/","title":"Document Revisions","text":""}]}